use std::io;

fn main() {
    let rows: Vec<Row> = INPUT.lines().map(|s| s.into()).collect();
    println!(
        "{}",
        vec![
            &[Direction::Right(1), Direction::Down(1)],
            &[Direction::Right(3), Direction::Down(1)],
            &[Direction::Right(5), Direction::Down(1)],
            &[Direction::Right(7), Direction::Down(1)],
            &[Direction::Right(1), Direction::Down(2)],
        ]
        .into_iter()
        .map(|vector| dbg!(Traversal::new(vector).count(rows.iter())))
        .product::<u32>()
    )
}

#[derive(Clone, Copy)]
struct Row {
    inner: usize,
}

impl From<&str> for Row {
    fn from(s: &str) -> Self {
        Row {
            inner: from_binary(s.replace(".", "0").replace("#", "1"))
                .expect("invalid usize binary"),
        }
    }
}

struct Mask {
    inner: usize,
}

impl Mask {
    fn count(&self, row: &Row) -> u32 {
        (row.inner & self.inner).count_ones()
    }

    fn shift(&mut self) {
        self.inner = if self.inner == 1 {
            1 << 30
        } else {
            self.inner >> 1
        }
    }
}

impl From<usize> for Mask {
    fn from(inner: usize) -> Self {
        Mask { inner }
    }
}

#[derive(Clone, Copy, Debug)]
enum Direction {
    Right(usize),
    Down(usize),
}

struct Traversal<'a> {
    vector: &'a [Direction],
}

impl<'a> Traversal<'a> {
    fn new(vector: &'a [Direction]) -> Self {
        Traversal { vector }
    }

    fn count<I: Iterator<Item = &'a Row>>(&self, mut rows: I) -> u32 {
        let mut count = 0;
        let mut mask = Mask::from(1 << 30);
        let mut row = if let Some(r) = rows.next() {
            r
        } else {
            return count;
        };

        loop {
            for direction in self.vector {
                match *direction {
                    Direction::Right(n) => {
                        // could avoid for loop by passing n!
                        for _ in 0..n {
                            mask.shift()
                        }
                    }
                    Direction::Down(n) => {
                        if let Some(r) = rows.nth(n-1) {
                            row = r
                        } else {
                            return count;
                        }
                    }
                }
            }
            count = count + mask.count(row)
        }
    }
}

fn from_binary<S: AsRef<str>>(bin: S) -> io::Result<usize> {
    usize::from_str_radix(bin.as_ref(), 2).map_err(|e| {
        io::Error::new(
            io::ErrorKind::InvalidData,
            format!("{}: {}", bin.as_ref(), e),
        )
    })
}

const INPUT: &str = "...#.....#.......##......#.....
...#..................#........
....##....#.......#............
.........#.......#.......#.....
..#..............#.........#..#
.....#.........#....#....#....#
....##..........#.#.##.........
...#....##...#...#...#.#..#....
...#.......###..........#......
.........#.....#....#...#.#....
.#...###..#..##..#.........###.
#.#...#..........###...#....#..
#....#.#..#..........#.......#.
.#..#........##.#..............
............#..#.#............#
.............#..........#......
...#.......#...............#...
.#...#..#..#............#..#...
....##.##..................#.##
#......#...#..##....#.....#...#
#..#..........##....#...###....
##......#.##.#......#..#......#
....#...#.......##.##...#.#..#.
##.#...#....#...#...#........#.
........#..#.....#....#.......#
.#......#......#..............#
.#.....#..#..#..#..#..#....#..#
.......#.....#.................
.#......#...#..#..#...#...#....
.........#..#..#.........#.....
.....#.........#.#..........#..
#......#....#....##....#.#.#...
................##.#...........
.....##.....#............#.#...
...........#...#.#..##...#.....
.......#....##.......#..#....#.
.##......##....#....####.##..#.
.....#.##.....#...#....##......
.............#....#......#....#
#.#.#.###........#.#....#.#....
.##...........#................
#..#..#...##..##.##...#..#.#...
..#......##..#.#......#..#.#.#.
.....#..............#......#...
#.#..##.##...#............##...
.#......#.............#........
........##....#......#..#......
##.........##....#..........#..
..#..#....#.........##....#..#.
........#..#..#........#...#...
#.........#......##.#...#.##...
.##.............#..###....#.##.
.##.#....#.......#.............
#..##.#.........#..##.#......##
....#..#.......................
.#.#.........#...............#.
....#......#.#..##..#...#.#..#.
#....##...##..#.......##.....##
....##...##...#....#.....#..#..
.#......#.#.#.#......##..#..#..
.....##..#..#.....#.....#...##.
....###................#..#.#..
.....#..#..#.#..........#..#...
...#.....#............#........
#.............#...#..#.....#..#
#........#.....#.#..#......#...
...#.##.....#.#..#.........#..#
.......##...#..#.#....##.......
..................#..##..#.#.#.
..#......#..#..#.....#...#.#...
.#.......#.....#.#....#.#......
##..#.#....#.###..#...#.......#
.......................#.......
..###..........#..##.##.#...##.
.....#...#....###.........#..#.
..#.....#....###...............
....#.......#........#....#..#.
......#................#.#...##
#.....#.......#..#..........##.
#.#....##.........#.....#.#....
#.#.#...#............####.##..#
.....#....####........#...#..#.
....##........#.#..............
.#......#..#..##......#....#.##
..#....#.#........#..#....#....
.#...#.##...#.#.....#.....#...#
..........#................###.
.....#..........##..#..........
.....#..................#...#..
#......##....#.#...#..#.......#
..#......##....#......#.#...#..
###.#..###.#.#..#...#....#.....
#.....#.#...#.##...#........#..
#..........................#...
.#.#.....#.#.#.......##.#.#....
.#....#..##......#....#........
.#.......#.##......#.#..#......
............#.....#....##.##...
....##........##......#........
....#......##....##.....#......
..#.#.....#......#...#.#.......
.###.........#...#........#....
......#.#...##.....##..##..#...
...#...#.#......#..##..#.......
.##....#.#........#.#..........
#....#.#......#......#.#.#.....
#.....#.....#................##
...........#....#...#...#......
..........##..##..#...##.......
.##......#.......#..#.#..##....
..........##....#....#..#.#....
...............#......#.....##.
.#...#....................#..#.
.............###...............
.####..............#...#.......
....#...#.#...#...#....#.......
.......#.#.....................
...............................
#..#.........##.......#.#.#....
....##...#...........#......#..
........##...#......#..........
....#.#.....#..#......#........
#..#................#..#.##....
.#........#.......#.........##.
#...........#...#...#......#.#.
..#.#.#..........##.##...#...#.
..#...#.##...#.#...........#...
##...........##...##...##......
....#....##...#......#..#.....#
#..#.#.#..#...#...#....#.......
............#.....#....#....#.#
....##.....#.........#......#..
.....##.......#...#...#.###....
...##......##..###.#.#....#....
#.#.#.#..#.#.........#...#...##
..#..........#.................
....##....#....................
###.#...............##...##.#..
....#.......##.#..#.#..........
............##..#.......##.....
#...#.........#..#..#..#...#...
..#......##..#.#...##.#.......#
......#................#...#...
......#..###............#.#....
..#.#...###...#..#...#......##.
...#.##...##............#......
#...##........#.#..#.......#...
#..#.....#..#.##...............
..#.....#.#....#.........#.....
.............#....#..#...#.##..
..#.#.....................##.#.
........#.......#..#.#.........
##..............#.....#.......#
.#.##...###....#.....#..##.#...
#..#...#..#......#..........###
#...........#..#...#....#....#.
....#..#.......##......#......#
#...#.#...............##...#...
...##.#..##.......##..#........
...........##..........#.......
..#....#..##...#......#.#......
.#.#....#.#.#...#.#............
.#.#..#...##.......#.#.........
...#...#.............#.######..
##.#........###.......#....#.#.
.#....#.....#.#........#......#
..#.#.........#..........##.#..
.#....#.#..............#......#
.....#..##.........#..##..#....
........#..#....#.......#.....#
#.#.......#.....#.##.#...#....#
...#...##...#....#.....#....#.#
#..##....#..........#..#.......
.......#.#.....#...#.#.#.....##
#...#...#..#......##.#..#......
...#.......#....#...........#.#
##.......#####.#.........#..#..
....#.#...................##...
......#..##............#.......
#.........#....#####.#.#..#.#..
..#......#.#.##............#...
..#...#.....#.#....#......#....
.#...#....#....#.#.#......#.#..
..#.##.....#..........#...#.#..
.......#...#.............#...#.
.#.........#.....#.#........##.
#....#..#..........##.......##.
...#....#.#.........#.......###
......#....#.#......#.......#..
.....#...#...#.#...##..#.#.....
#.........##..#...##..#.#....#.
...#......#.#......##.....#....
.#####.....#.#.#.#...###.##....
..#................#.#...#.#...
#.......##...#.........##..#...
..#.....#....##............#...
#............##...............#
..#..#.................#.......
...............#..#.......##...
..##..#....#...##..........#..#
#...###....##.#.......#.....#..
..........#.........#..#......#
##....#.....#...##.......#.....
..#..#.......#.................
..#..##......#.........#......#
...........##.#..#......#.#..#.
..#...##...##......#...#...#.#.
.#..#.....#.........#..........
#..##...#............#..#.#....
..#...#...##.#........#....#.#.
......##..###.#....#........#..
.....#..#....##...##..........#
................#.#.#.....#..#.
#.##...#......#.#..#.......###.
.......#.#..#..#......#..##..#.
.##...#...#....#....#.......#..
......#..#....#.#.###.....#.#.#
#....#.#...#......#.#.....#..#.
.......#.#...#.#.#............#
#.....#..#...#.................
.....#..........#..#.#..#.#....
.........#......#.#.........###
..#.###........#....##.#.......
.#.......#.#......#........#..#
............#........#.....#...
......#......#....#.#....#.....
.#.......#.....#.##.#..#...#..#
##.....#...#..........##..#...#
.#........#....#...#....##.#...
...#.#.......#.#....#.#...#...#
........#.#.....#.##...#.#.#...
...........#....#..#.........#.
......#.#..#..##...#.......#...
...#....#..#..#.##...........##
.#..#.#.#......#....##...#.....
......#..#........#...##.......
.............#...##.#.....#...#
....#...............##......#.#
.#...........#.........###.##.#
....##........##...#.##.....#..
#......##........#...........#.
###.#.................#.....#..
.....##..#.........#......##.#.
#.#.......##.#..#...#...#......
...#.#..##.....#....##.....#.#.
...##..#...#........#.#..#..#..
...........#....#...#...##.....
##.......#...#.#.##...##..#.#..
#....#.#..##...................
.#...................#.#..#....
#.....#..........#..#...#...#..
...#..#............#.#.........
............#..##.....##......#
#....#.........#.#..#..........
...#.#................#....#.#.
..#..#...#...#.#.#...#.#.#.....
..#.......#.............##..#.#
#........#.#.###.#...#..#.###..
.......#......#..#.....####...#
..##....#..#...................
....##.#....#......#.#..#..#..#
#...........##...#.#.##..###...
##.##......#...........#....#..
.#....#....#..#..#...##...#....
...##.#.#......#...............
.....##.##...#...........#.....
....#...#.#.........##.#....#.#
#..#...........#......#........
..#..#.....#....#.##.......#..#
..#.......##.....##.......#...#
.#.##.#..#...............#....#
.........#...........#.........
..........##......#.#..........
..#........###....#..#...#...#.
....#.#...#.....#..#....#......
..##...##...#..#..##......##..#
..#..#......#....#....#...#..##
...#...............#..#........
....##..#...#......#........#..
###.....##.......#.............
.#.#.##........##..#...#.......
.....###............#..#..#....
.#....##.#...####........#.....
............#.#.....##....#.#..
....#..........#...#...........
........#.#...#..##...........#
#.......#..#.......###...#....#
#....#..#......#.....#...##.#..
..#.............#.#.###...##..#
.#.#....#...#.....#...#.......#
.##.#..#.........#..#......#...
#....#...#......#.....#.....#..
...........#....#.......##...#.
#.#..##....#....#.#.......#.#..
..............#.#..##.##.......
....#........#......#....#.#...
......#.....................#..
#..##...##.....#.........#.....
#.....#.....#....#...#.....#...
........###...........#...#....
............#.....#...##....#..
.......#.......#...#.#...##....
..#.#..#....#...#...#....#.....
..........#.#....#....###....#.
.##...#......###..#............
...#...#........#....#....##...
##.....#.##...#.#...........#.#
..........#.#....#...##.#...#..
..#....#.#...#...#....#.###....
......#.##..#..#.........#.###.
#.#.#.....#.....##.......#.....
...#..#..#....#.#....#....#....
##..#.#................#......#
.....#...#..#......#..####.....
.....##.....#....####......#...
..........##..###.#....#.....##
###...#.......#......##...#....
.......##...#...#..#.##.#....##
.....##.....##...##.....#..#..#
......#.#.....#...#....#...#...
..##........#...#..............
..#........#.##.........#...#..
#....#....#................#...";
